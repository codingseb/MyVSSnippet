<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>The minimal code to save the position size and window state of a window</Title>
            <Shortcut>windowrectconfig</Shortcut>
            <Author>Coding Seb</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>

        <Snippet>
            <Declarations>
                <Literal>
                    <ID>windowName</ID>
                    <ToolTip>Name of the window</ToolTip>
                    <Default>WindowName</Default>
                </Literal>
            </Declarations>
            <Code Language="csharp"><![CDATA[                public double? $windowName$Left { get; set; }
        public double? $windowName$Top { get; set; }
        public double? $windowName$Width { get; set; }
        public double? $windowName$Height { get; set; }
        public bool $windowName$Maximized { get; set; }

        //-------------------------------------------------------------------------------------------------
        
        // Code to copy in the constructor of $windowName$ or in a Init method called in constructor
        //Left = Config.Instance.$windowName$Left ?? Left;
        //Top = Config.Instance.$windowName$Top ?? Top;
        //Width = Config.Instance.$windowName$Width ?? Width;
        //Height = Config.Instance.$windowName$Height ?? Height;
		
		//// To Manage multi screen to one screen and not lose the window outside the screen
		//if (Top < SystemParameters.VirtualScreenTop)
		//{
		//    Top = SystemParameters.VirtualScreenTop;
		//}

		//if (Left < SystemParameters.VirtualScreenLeft)
		//{
		//    Left = SystemParameters.VirtualScreenLeft;
		//}

		//if (Left + Width > SystemParameters.VirtualScreenLeft + SystemParameters.VirtualScreenWidth)
		//{
		//    Left = SystemParameters.VirtualScreenWidth + SystemParameters.VirtualScreenLeft - Width;
		//}

		//if (Top + Height > SystemParameters.VirtualScreenTop + SystemParameters.VirtualScreenHeight)
		//{
		//    Top = SystemParameters.VirtualScreenHeight + SystemParameters.VirtualScreenTop - Height;
		//}

        //WindowState = Config.Instance.$windowName$Maximized ? WindowState.Maximized : WindowState.Normal;
        
        //-------------------------------------------------------------------------------------------------
        
        //-------------------------------------------------------------------------------------------------
        
        // Code to copy in the Window_Closing method of $windowName$ (or a method pointed by the Closing event of $windowName$)
        //Config.Instance.$windowName$Left = Left;
        //Config.Instance.$windowName$Top = Top;
        //Config.Instance.$windowName$Width = ActualWidth;
        //Config.Instance.$windowName$Height = ActualHeight;

        //Config.Instance.$windowName$Maximized = WindowState == WindowState.Maximized;

        //Config.Instance.Save();        
        //-------------------------------------------------------------------------------------------------
        
        
	$end$]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
